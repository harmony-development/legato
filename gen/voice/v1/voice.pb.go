// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: voice/v1/voice.proto

package voicev1

import (
	_ "github.com/harmony-development/legato/gen/harmonytypes/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Data containing all the necessary information to
// create a consumer for a user in a voice channel.
//
// This corresponds to https://mediasoup.org/documentation/v3/mediasoup-client/api/#ConsumerOptions on client:
// - `consumer_id` -> `id`
// - `producer_id` -> `producerId`
// - `rtp_parameters` -> `rtpParameters`
// - and `kind` should be set to "audio".
type UserConsumerOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User ID of the user.
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Producer ID of the producer being consumed.
	ProducerId string `protobuf:"bytes,2,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	// Consumer ID for the user's producer consumer.
	ConsumerId string `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	// RTP paramaters for the user's audio track. Corresponds to `RtpParameters` in mediasoup's TypeScript API.
	RtpParameters string `protobuf:"bytes,4,opt,name=rtp_parameters,json=rtpParameters,proto3" json:"rtp_parameters,omitempty"`
}

func (x *UserConsumerOptions) Reset() {
	*x = UserConsumerOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConsumerOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConsumerOptions) ProtoMessage() {}

func (x *UserConsumerOptions) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConsumerOptions.ProtoReflect.Descriptor instead.
func (*UserConsumerOptions) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{0}
}

func (x *UserConsumerOptions) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserConsumerOptions) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *UserConsumerOptions) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *UserConsumerOptions) GetRtpParameters() string {
	if x != nil {
		return x.RtpParameters
	}
	return ""
}

// Object containing all the necessary information about transport options required
// from the server to establish transport connection on the client.
//
// This corresponds to https://mediasoup.org/documentation/v3/mediasoup-client/api/#TransportOptions on client:
// - `id` -> `id`
// - `ice_parameters` -> `iceParameters`
// - `dtls_parameters` -> `dtlsParameters`
// - `ice_candidates` -> `iceCandidates`
type TransportOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transport ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// DTLS paramaters in JSON. Corresponds to `DtlsParameters` in mediasoup's TypeScript API.
	DtlsParameters string `protobuf:"bytes,2,opt,name=dtls_parameters,json=dtlsParameters,proto3" json:"dtls_parameters,omitempty"`
	// ICE candidates in JSON. Corresponds to `IceCandidate` in mediasoup's TypeScript API.
	IceCandidates []string `protobuf:"bytes,3,rep,name=ice_candidates,json=iceCandidates,proto3" json:"ice_candidates,omitempty"`
	// ICE paramaters in JSON. Corresponds to `IceParameters` in mediasoup's TypeScript API.
	IceParameters string `protobuf:"bytes,4,opt,name=ice_parameters,json=iceParameters,proto3" json:"ice_parameters,omitempty"`
}

func (x *TransportOptions) Reset() {
	*x = TransportOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportOptions) ProtoMessage() {}

func (x *TransportOptions) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportOptions.ProtoReflect.Descriptor instead.
func (*TransportOptions) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{1}
}

func (x *TransportOptions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransportOptions) GetDtlsParameters() string {
	if x != nil {
		return x.DtlsParameters
	}
	return ""
}

func (x *TransportOptions) GetIceCandidates() []string {
	if x != nil {
		return x.IceCandidates
	}
	return nil
}

func (x *TransportOptions) GetIceParameters() string {
	if x != nil {
		return x.IceParameters
	}
	return ""
}

// Used in `StreamMessage` endpoint.
type StreamMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message for this response.
	//
	// Types that are assignable to Message:
	//	*StreamMessageRequest_Initialize_
	//	*StreamMessageRequest_PrepareForJoinChannel_
	//	*StreamMessageRequest_JoinChannel_
	//	*StreamMessageRequest_ResumeConsumer_
	Message isStreamMessageRequest_Message `protobuf_oneof:"message"`
}

func (x *StreamMessageRequest) Reset() {
	*x = StreamMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageRequest) ProtoMessage() {}

func (x *StreamMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageRequest.ProtoReflect.Descriptor instead.
func (*StreamMessageRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{2}
}

func (m *StreamMessageRequest) GetMessage() isStreamMessageRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *StreamMessageRequest) GetInitialize() *StreamMessageRequest_Initialize {
	if x, ok := x.GetMessage().(*StreamMessageRequest_Initialize_); ok {
		return x.Initialize
	}
	return nil
}

func (x *StreamMessageRequest) GetPrepareForJoinChannel() *StreamMessageRequest_PrepareForJoinChannel {
	if x, ok := x.GetMessage().(*StreamMessageRequest_PrepareForJoinChannel_); ok {
		return x.PrepareForJoinChannel
	}
	return nil
}

func (x *StreamMessageRequest) GetJoinChannel() *StreamMessageRequest_JoinChannel {
	if x, ok := x.GetMessage().(*StreamMessageRequest_JoinChannel_); ok {
		return x.JoinChannel
	}
	return nil
}

func (x *StreamMessageRequest) GetResumeConsumer() *StreamMessageRequest_ResumeConsumer {
	if x, ok := x.GetMessage().(*StreamMessageRequest_ResumeConsumer_); ok {
		return x.ResumeConsumer
	}
	return nil
}

type isStreamMessageRequest_Message interface {
	isStreamMessageRequest_Message()
}

type StreamMessageRequest_Initialize_ struct {
	// Sent to initialize the WS and receive necessary information.
	Initialize *StreamMessageRequest_Initialize `protobuf:"bytes,1,opt,name=initialize,proto3,oneof"`
}

type StreamMessageRequest_PrepareForJoinChannel_ struct {
	// Sent to prepare for joining channel.
	PrepareForJoinChannel *StreamMessageRequest_PrepareForJoinChannel `protobuf:"bytes,2,opt,name=prepare_for_join_channel,json=prepareForJoinChannel,proto3,oneof"`
}

type StreamMessageRequest_JoinChannel_ struct {
	// Sent to join a channel.
	JoinChannel *StreamMessageRequest_JoinChannel `protobuf:"bytes,3,opt,name=join_channel,json=joinChannel,proto3,oneof"`
}

type StreamMessageRequest_ResumeConsumer_ struct {
	// Sent to resume a consumer.
	ResumeConsumer *StreamMessageRequest_ResumeConsumer `protobuf:"bytes,4,opt,name=resume_consumer,json=resumeConsumer,proto3,oneof"`
}

func (*StreamMessageRequest_Initialize_) isStreamMessageRequest_Message() {}

func (*StreamMessageRequest_PrepareForJoinChannel_) isStreamMessageRequest_Message() {}

func (*StreamMessageRequest_JoinChannel_) isStreamMessageRequest_Message() {}

func (*StreamMessageRequest_ResumeConsumer_) isStreamMessageRequest_Message() {}

// Used in `StreamMessage` endpoint.
type StreamMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message for this response.
	//
	// Types that are assignable to Message:
	//	*StreamMessageResponse_Initialized_
	//	*StreamMessageResponse_PreparedForJoinChannel_
	//	*StreamMessageResponse_JoinedChannel_
	//	*StreamMessageResponse_UserJoined_
	//	*StreamMessageResponse_UserLeft_
	Message isStreamMessageResponse_Message `protobuf_oneof:"message"`
}

func (x *StreamMessageResponse) Reset() {
	*x = StreamMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageResponse) ProtoMessage() {}

func (x *StreamMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageResponse.ProtoReflect.Descriptor instead.
func (*StreamMessageResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{3}
}

func (m *StreamMessageResponse) GetMessage() isStreamMessageResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *StreamMessageResponse) GetInitialized() *StreamMessageResponse_Initialized {
	if x, ok := x.GetMessage().(*StreamMessageResponse_Initialized_); ok {
		return x.Initialized
	}
	return nil
}

func (x *StreamMessageResponse) GetPreparedForJoinChannel() *StreamMessageResponse_PreparedForJoinChannel {
	if x, ok := x.GetMessage().(*StreamMessageResponse_PreparedForJoinChannel_); ok {
		return x.PreparedForJoinChannel
	}
	return nil
}

func (x *StreamMessageResponse) GetJoinedChannel() *StreamMessageResponse_JoinedChannel {
	if x, ok := x.GetMessage().(*StreamMessageResponse_JoinedChannel_); ok {
		return x.JoinedChannel
	}
	return nil
}

func (x *StreamMessageResponse) GetUserJoined() *StreamMessageResponse_UserJoined {
	if x, ok := x.GetMessage().(*StreamMessageResponse_UserJoined_); ok {
		return x.UserJoined
	}
	return nil
}

func (x *StreamMessageResponse) GetUserLeft() *StreamMessageResponse_UserLeft {
	if x, ok := x.GetMessage().(*StreamMessageResponse_UserLeft_); ok {
		return x.UserLeft
	}
	return nil
}

type isStreamMessageResponse_Message interface {
	isStreamMessageResponse_Message()
}

type StreamMessageResponse_Initialized_ struct {
	// Sent when connection is started.
	Initialized *StreamMessageResponse_Initialized `protobuf:"bytes,1,opt,name=initialized,proto3,oneof"`
}

type StreamMessageResponse_PreparedForJoinChannel_ struct {
	// Sent when preparing to join a channel is successful.
	PreparedForJoinChannel *StreamMessageResponse_PreparedForJoinChannel `protobuf:"bytes,2,opt,name=prepared_for_join_channel,json=preparedForJoinChannel,proto3,oneof"`
}

type StreamMessageResponse_JoinedChannel_ struct {
	// Sent when joining a channel is successful.
	JoinedChannel *StreamMessageResponse_JoinedChannel `protobuf:"bytes,3,opt,name=joined_channel,json=joinedChannel,proto3,oneof"`
}

type StreamMessageResponse_UserJoined_ struct {
	// Sent when another user joins the channel.
	UserJoined *StreamMessageResponse_UserJoined `protobuf:"bytes,4,opt,name=user_joined,json=userJoined,proto3,oneof"`
}

type StreamMessageResponse_UserLeft_ struct {
	// Sent when another user leaves the channel.
	UserLeft *StreamMessageResponse_UserLeft `protobuf:"bytes,5,opt,name=user_left,json=userLeft,proto3,oneof"`
}

func (*StreamMessageResponse_Initialized_) isStreamMessageResponse_Message() {}

func (*StreamMessageResponse_PreparedForJoinChannel_) isStreamMessageResponse_Message() {}

func (*StreamMessageResponse_JoinedChannel_) isStreamMessageResponse_Message() {}

func (*StreamMessageResponse_UserJoined_) isStreamMessageResponse_Message() {}

func (*StreamMessageResponse_UserLeft_) isStreamMessageResponse_Message() {}

// IDs that will be used to know which channel this WS will operate in.
type StreamMessageRequest_Initialize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Guild ID of the guild where the channel is.
	GuildId uint64 `protobuf:"varint,1,opt,name=guild_id,json=guildId,proto3" json:"guild_id,omitempty"`
	// Channel ID of the voice channel to initialize for.
	ChannelId uint64 `protobuf:"varint,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *StreamMessageRequest_Initialize) Reset() {
	*x = StreamMessageRequest_Initialize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageRequest_Initialize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageRequest_Initialize) ProtoMessage() {}

func (x *StreamMessageRequest_Initialize) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageRequest_Initialize.ProtoReflect.Descriptor instead.
func (*StreamMessageRequest_Initialize) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{2, 0}
}

func (x *StreamMessageRequest_Initialize) GetGuildId() uint64 {
	if x != nil {
		return x.GuildId
	}
	return 0
}

func (x *StreamMessageRequest_Initialize) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

// Data needed to prepare for joining a channel.
type StreamMessageRequest_PrepareForJoinChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RTP capabilities in JSON.
	RtpCapabilities string `protobuf:"bytes,1,opt,name=rtp_capabilities,json=rtpCapabilities,proto3" json:"rtp_capabilities,omitempty"`
}

func (x *StreamMessageRequest_PrepareForJoinChannel) Reset() {
	*x = StreamMessageRequest_PrepareForJoinChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageRequest_PrepareForJoinChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageRequest_PrepareForJoinChannel) ProtoMessage() {}

func (x *StreamMessageRequest_PrepareForJoinChannel) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageRequest_PrepareForJoinChannel.ProtoReflect.Descriptor instead.
func (*StreamMessageRequest_PrepareForJoinChannel) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{2, 1}
}

func (x *StreamMessageRequest_PrepareForJoinChannel) GetRtpCapabilities() string {
	if x != nil {
		return x.RtpCapabilities
	}
	return ""
}

// Data needed to join a channel.
//
// This takes one RTP paramaters for one track, which will be
// assumed to be Audio.
//
// It also takes DTLS paramaters for connecting both producer and consumer.
type StreamMessageRequest_JoinChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RTP paramaters in JSON. Corresponds to `RtpParameters` in mediasoup's TypeScript API.
	RtpParamaters string `protobuf:"bytes,1,opt,name=rtp_paramaters,json=rtpParamaters,proto3" json:"rtp_paramaters,omitempty"`
	// DTLS paramaters for producer transport, in JSON. Corresponds to `DtlsParameters` in mediasoup's TypeScript API.
	ProducerDtlsParamaters string `protobuf:"bytes,2,opt,name=producer_dtls_paramaters,json=producerDtlsParamaters,proto3" json:"producer_dtls_paramaters,omitempty"`
	// DTLS paramaters for consumer transport, in JSON. Corresponds to `DtlsParameters` in mediasoup's TypeScript API.
	ConsumerDtlsParamaters string `protobuf:"bytes,3,opt,name=consumer_dtls_paramaters,json=consumerDtlsParamaters,proto3" json:"consumer_dtls_paramaters,omitempty"`
}

func (x *StreamMessageRequest_JoinChannel) Reset() {
	*x = StreamMessageRequest_JoinChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageRequest_JoinChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageRequest_JoinChannel) ProtoMessage() {}

func (x *StreamMessageRequest_JoinChannel) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageRequest_JoinChannel.ProtoReflect.Descriptor instead.
func (*StreamMessageRequest_JoinChannel) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{2, 2}
}

func (x *StreamMessageRequest_JoinChannel) GetRtpParamaters() string {
	if x != nil {
		return x.RtpParamaters
	}
	return ""
}

func (x *StreamMessageRequest_JoinChannel) GetProducerDtlsParamaters() string {
	if x != nil {
		return x.ProducerDtlsParamaters
	}
	return ""
}

func (x *StreamMessageRequest_JoinChannel) GetConsumerDtlsParamaters() string {
	if x != nil {
		return x.ConsumerDtlsParamaters
	}
	return ""
}

// Message to resume a consumer.
type StreamMessageRequest_ResumeConsumer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the consumer to resume.
	ConsumerId string `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
}

func (x *StreamMessageRequest_ResumeConsumer) Reset() {
	*x = StreamMessageRequest_ResumeConsumer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageRequest_ResumeConsumer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageRequest_ResumeConsumer) ProtoMessage() {}

func (x *StreamMessageRequest_ResumeConsumer) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageRequest_ResumeConsumer.ProtoReflect.Descriptor instead.
func (*StreamMessageRequest_ResumeConsumer) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{2, 3}
}

func (x *StreamMessageRequest_ResumeConsumer) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

// Initialization data for client.
type StreamMessageResponse_Initialized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server RTP capabilities in JSON. Corresponds to `RtpCapabilities` in mediasoup's TypeScript API.
	RtpCapabilities string `protobuf:"bytes,1,opt,name=rtp_capabilities,json=rtpCapabilities,proto3" json:"rtp_capabilities,omitempty"`
}

func (x *StreamMessageResponse_Initialized) Reset() {
	*x = StreamMessageResponse_Initialized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageResponse_Initialized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageResponse_Initialized) ProtoMessage() {}

func (x *StreamMessageResponse_Initialized) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageResponse_Initialized.ProtoReflect.Descriptor instead.
func (*StreamMessageResponse_Initialized) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{3, 0}
}

func (x *StreamMessageResponse_Initialized) GetRtpCapabilities() string {
	if x != nil {
		return x.RtpCapabilities
	}
	return ""
}

// RTP capabilities validated.
type StreamMessageResponse_PreparedForJoinChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Consumer transport options.
	ConsumerTransportOptions *TransportOptions `protobuf:"bytes,1,opt,name=consumer_transport_options,json=consumerTransportOptions,proto3" json:"consumer_transport_options,omitempty"`
	// Producer transport options.
	ProducerTransportOptions *TransportOptions `protobuf:"bytes,2,opt,name=producer_transport_options,json=producerTransportOptions,proto3" json:"producer_transport_options,omitempty"`
}

func (x *StreamMessageResponse_PreparedForJoinChannel) Reset() {
	*x = StreamMessageResponse_PreparedForJoinChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageResponse_PreparedForJoinChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageResponse_PreparedForJoinChannel) ProtoMessage() {}

func (x *StreamMessageResponse_PreparedForJoinChannel) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageResponse_PreparedForJoinChannel.ProtoReflect.Descriptor instead.
func (*StreamMessageResponse_PreparedForJoinChannel) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{3, 1}
}

func (x *StreamMessageResponse_PreparedForJoinChannel) GetConsumerTransportOptions() *TransportOptions {
	if x != nil {
		return x.ConsumerTransportOptions
	}
	return nil
}

func (x *StreamMessageResponse_PreparedForJoinChannel) GetProducerTransportOptions() *TransportOptions {
	if x != nil {
		return x.ProducerTransportOptions
	}
	return nil
}

// Producer for voice created; consumer and producer transports are connected.
type StreamMessageResponse_JoinedChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Consumer options for users that were already in the room.
	OtherUsers []*UserConsumerOptions `protobuf:"bytes,1,rep,name=other_users,json=otherUsers,proto3" json:"other_users,omitempty"`
}

func (x *StreamMessageResponse_JoinedChannel) Reset() {
	*x = StreamMessageResponse_JoinedChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageResponse_JoinedChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageResponse_JoinedChannel) ProtoMessage() {}

func (x *StreamMessageResponse_JoinedChannel) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageResponse_JoinedChannel.ProtoReflect.Descriptor instead.
func (*StreamMessageResponse_JoinedChannel) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{3, 2}
}

func (x *StreamMessageResponse_JoinedChannel) GetOtherUsers() []*UserConsumerOptions {
	if x != nil {
		return x.OtherUsers
	}
	return nil
}

// Data for the user that joined the room and it's producer.
type StreamMessageResponse_UserJoined struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Consumer options for this user.
	Data *UserConsumerOptions `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StreamMessageResponse_UserJoined) Reset() {
	*x = StreamMessageResponse_UserJoined{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageResponse_UserJoined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageResponse_UserJoined) ProtoMessage() {}

func (x *StreamMessageResponse_UserJoined) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageResponse_UserJoined.ProtoReflect.Descriptor instead.
func (*StreamMessageResponse_UserJoined) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{3, 3}
}

func (x *StreamMessageResponse_UserJoined) GetData() *UserConsumerOptions {
	if x != nil {
		return x.Data
	}
	return nil
}

// Data for the user that left the room and the producer.
type StreamMessageResponse_UserLeft struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the user that left.
	UserId uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *StreamMessageResponse_UserLeft) Reset() {
	*x = StreamMessageResponse_UserLeft{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voice_v1_voice_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamMessageResponse_UserLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessageResponse_UserLeft) ProtoMessage() {}

func (x *StreamMessageResponse_UserLeft) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessageResponse_UserLeft.ProtoReflect.Descriptor instead.
func (*StreamMessageResponse_UserLeft) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{3, 4}
}

func (x *StreamMessageResponse_UserLeft) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_voice_v1_voice_proto protoreflect.FileDescriptor

var file_voice_v1_voice_proto_rawDesc = []byte{
	0x0a, 0x14, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x68, 0x61, 0x72, 0x6d, 0x6f,
	0x6e, 0x79, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x74, 0x70,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x74, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x99, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x74, 0x6c, 0x73, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x64, 0x74, 0x6c, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x98, 0x06, 0x0a,
	0x14, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x78, 0x0a, 0x18, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x46, 0x6f,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x15,
	0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x58, 0x0a, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12,
	0x61, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x1a, 0x46, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x67, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x1a, 0x42, 0x0a, 0x15, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x74, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x74, 0x70, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xa8,
	0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x74, 0x70, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x74, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x73, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x5f, 0x64, 0x74, 0x6c, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x44, 0x74, 0x6c, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x38, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x64, 0x74, 0x6c, 0x73,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x74, 0x6c, 0x73, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x31, 0x0a, 0x0e, 0x52, 0x65, 0x73,
	0x75, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe9, 0x07, 0x0a, 0x15, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x7c, 0x0a, 0x19, 0x70,
	0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65,
	0x64, 0x46, 0x6f, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48,
	0x00, 0x52, 0x16, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x5f, 0x0a, 0x0e, 0x6a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x6a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x56, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x50, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4c, 0x65, 0x66, 0x74, 0x1a, 0x38, 0x0a, 0x0b, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x74, 0x70, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72,
	0x74, 0x70, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xde,
	0x01, 0x0a, 0x16, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x61, 0x0a, 0x1a, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x61, 0x0a, 0x1a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x58, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x47, 0x0a, 0x0b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x48, 0x0a, 0x0a, 0x55, 0x73, 0x65,
	0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x23, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0x7d, 0x0a, 0x0c, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x6d, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x05, 0x9a, 0x44, 0x02, 0x08, 0x01, 0x28, 0x01,
	0x30, 0x01, 0x42, 0xc5, 0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x61, 0x72, 0x6d, 0x6f, 0x6e, 0x79, 0x2d, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x56, 0x58, 0xaa, 0x02, 0x11, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x3a,
	0x3a, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_voice_v1_voice_proto_rawDescOnce sync.Once
	file_voice_v1_voice_proto_rawDescData = file_voice_v1_voice_proto_rawDesc
)

func file_voice_v1_voice_proto_rawDescGZIP() []byte {
	file_voice_v1_voice_proto_rawDescOnce.Do(func() {
		file_voice_v1_voice_proto_rawDescData = protoimpl.X.CompressGZIP(file_voice_v1_voice_proto_rawDescData)
	})
	return file_voice_v1_voice_proto_rawDescData
}

var file_voice_v1_voice_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_voice_v1_voice_proto_goTypes = []interface{}{
	(*UserConsumerOptions)(nil),                          // 0: protocol.voice.v1.UserConsumerOptions
	(*TransportOptions)(nil),                             // 1: protocol.voice.v1.TransportOptions
	(*StreamMessageRequest)(nil),                         // 2: protocol.voice.v1.StreamMessageRequest
	(*StreamMessageResponse)(nil),                        // 3: protocol.voice.v1.StreamMessageResponse
	(*StreamMessageRequest_Initialize)(nil),              // 4: protocol.voice.v1.StreamMessageRequest.Initialize
	(*StreamMessageRequest_PrepareForJoinChannel)(nil),   // 5: protocol.voice.v1.StreamMessageRequest.PrepareForJoinChannel
	(*StreamMessageRequest_JoinChannel)(nil),             // 6: protocol.voice.v1.StreamMessageRequest.JoinChannel
	(*StreamMessageRequest_ResumeConsumer)(nil),          // 7: protocol.voice.v1.StreamMessageRequest.ResumeConsumer
	(*StreamMessageResponse_Initialized)(nil),            // 8: protocol.voice.v1.StreamMessageResponse.Initialized
	(*StreamMessageResponse_PreparedForJoinChannel)(nil), // 9: protocol.voice.v1.StreamMessageResponse.PreparedForJoinChannel
	(*StreamMessageResponse_JoinedChannel)(nil),          // 10: protocol.voice.v1.StreamMessageResponse.JoinedChannel
	(*StreamMessageResponse_UserJoined)(nil),             // 11: protocol.voice.v1.StreamMessageResponse.UserJoined
	(*StreamMessageResponse_UserLeft)(nil),               // 12: protocol.voice.v1.StreamMessageResponse.UserLeft
}
var file_voice_v1_voice_proto_depIdxs = []int32{
	4,  // 0: protocol.voice.v1.StreamMessageRequest.initialize:type_name -> protocol.voice.v1.StreamMessageRequest.Initialize
	5,  // 1: protocol.voice.v1.StreamMessageRequest.prepare_for_join_channel:type_name -> protocol.voice.v1.StreamMessageRequest.PrepareForJoinChannel
	6,  // 2: protocol.voice.v1.StreamMessageRequest.join_channel:type_name -> protocol.voice.v1.StreamMessageRequest.JoinChannel
	7,  // 3: protocol.voice.v1.StreamMessageRequest.resume_consumer:type_name -> protocol.voice.v1.StreamMessageRequest.ResumeConsumer
	8,  // 4: protocol.voice.v1.StreamMessageResponse.initialized:type_name -> protocol.voice.v1.StreamMessageResponse.Initialized
	9,  // 5: protocol.voice.v1.StreamMessageResponse.prepared_for_join_channel:type_name -> protocol.voice.v1.StreamMessageResponse.PreparedForJoinChannel
	10, // 6: protocol.voice.v1.StreamMessageResponse.joined_channel:type_name -> protocol.voice.v1.StreamMessageResponse.JoinedChannel
	11, // 7: protocol.voice.v1.StreamMessageResponse.user_joined:type_name -> protocol.voice.v1.StreamMessageResponse.UserJoined
	12, // 8: protocol.voice.v1.StreamMessageResponse.user_left:type_name -> protocol.voice.v1.StreamMessageResponse.UserLeft
	1,  // 9: protocol.voice.v1.StreamMessageResponse.PreparedForJoinChannel.consumer_transport_options:type_name -> protocol.voice.v1.TransportOptions
	1,  // 10: protocol.voice.v1.StreamMessageResponse.PreparedForJoinChannel.producer_transport_options:type_name -> protocol.voice.v1.TransportOptions
	0,  // 11: protocol.voice.v1.StreamMessageResponse.JoinedChannel.other_users:type_name -> protocol.voice.v1.UserConsumerOptions
	0,  // 12: protocol.voice.v1.StreamMessageResponse.UserJoined.data:type_name -> protocol.voice.v1.UserConsumerOptions
	2,  // 13: protocol.voice.v1.VoiceService.StreamMessage:input_type -> protocol.voice.v1.StreamMessageRequest
	3,  // 14: protocol.voice.v1.VoiceService.StreamMessage:output_type -> protocol.voice.v1.StreamMessageResponse
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_voice_v1_voice_proto_init() }
func file_voice_v1_voice_proto_init() {
	if File_voice_v1_voice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_voice_v1_voice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConsumerOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageRequest_Initialize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageRequest_PrepareForJoinChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageRequest_JoinChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageRequest_ResumeConsumer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageResponse_Initialized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageResponse_PreparedForJoinChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageResponse_JoinedChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageResponse_UserJoined); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voice_v1_voice_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamMessageResponse_UserLeft); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_voice_v1_voice_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*StreamMessageRequest_Initialize_)(nil),
		(*StreamMessageRequest_PrepareForJoinChannel_)(nil),
		(*StreamMessageRequest_JoinChannel_)(nil),
		(*StreamMessageRequest_ResumeConsumer_)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*StreamMessageResponse_Initialized_)(nil),
		(*StreamMessageResponse_PreparedForJoinChannel_)(nil),
		(*StreamMessageResponse_JoinedChannel_)(nil),
		(*StreamMessageResponse_UserJoined_)(nil),
		(*StreamMessageResponse_UserLeft_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voice_v1_voice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_voice_v1_voice_proto_goTypes,
		DependencyIndexes: file_voice_v1_voice_proto_depIdxs,
		MessageInfos:      file_voice_v1_voice_proto_msgTypes,
	}.Build()
	File_voice_v1_voice_proto = out.File
	file_voice_v1_voice_proto_rawDesc = nil
	file_voice_v1_voice_proto_goTypes = nil
	file_voice_v1_voice_proto_depIdxs = nil
}
